const { EmbedBuilder, PermissionsBitField, CommandInteractionOptionResolver, PermissionFlagsBits } = require("discord.js");
const { SlashCommandBuilder } = require("@discordjs/builders");
const config = require("../../config");
const { QuickDB } = require("quick.db");
const db = new QuickDB();


module.exports = {
    adminOnly: false,
    data: new SlashCommandBuilder()
        .setName("sampmods")
        .setDescription("Po≈°lu v≈°echny m√≥dy, kter√© FoFo pou≈æ√≠v√° na samp."),
    run: async (client, interaction) => {

        await interaction.deferReply();

        const mods = await db.get("web_api.sampMods");
        const embed = new EmbedBuilder()
        .setTitle("**üíé SAMP M√ìDY**")
        .setDescription("Pou≈æ√≠v√°n√≠ m√≥d≈Ø nen√≠ WTLSku ofici√°lnƒõ povolen√© a m≈Ø≈æe≈° za to dostat ban. Pou≈æit√≠ jen na vlastn√≠ riziko, 4Tense nen√≠ odpovƒõdn√© za pou≈æit√≠ modifikac√≠ do hry.")
        .setColor(config.color);

        mods.forEach(mod => {
            embed.addFields({ name: `\u200b\n**${mod.name}**`, value: `${mod.desc}\n[**ST√ÅHNOUT**](${mod.url})`});
        }); 



        interaction.editReply({ embeds: [embed], ephemeral: false })
    },
};